<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Task Manager</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    :root {
      --primary: #3b82f6;
      --primary-dark: #2563eb;
      --surface: #1e293b;
      --background: #0f172a;
      --text: #f1f5f9;
      --text-secondary: #cbd5e1;
      --border: #334155;
      --success: #10b981;
    }

    body {
      min-height: 100vh;
      background: var(--background);
      color: var(--text);
      padding: 20px;
      background-image: 
        radial-gradient(circle at 10% 20%, rgba(59, 130, 246, 0.1) 0%, transparent 20%),
        radial-gradient(circle at 90% 80%, rgba(59, 130, 246, 0.1) 0%, transparent 20%);
    }

    .container {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }

    .header {
      text-align: center;
      margin-bottom: 40px;
      position: relative;
    }

    h1 {
      font-size: 2.5em;
      font-weight: 700;
      margin-bottom: 20px;
      background: linear-gradient(90deg, var(--primary), #60a5fa);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      position: relative;
      padding-bottom: 15px;
    }

    h1::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: 60px;
      height: 4px;
      background: var(--primary);
      border-radius: 2px;
    }

    .create-task-btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 14px 28px;
      background: var(--primary);
      color: white;
      text-decoration: none;
      border-radius: 12px;
      font-weight: 600;
      transition: all 0.3s ease;
      margin-bottom: 30px;
    }

    .create-task-btn:hover {
      background: var(--primary-dark);
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(59, 130, 246, 0.4);
    }

    .section-title {
      color: var(--text-secondary);
      margin-bottom: 20px;
      font-size: 1.5em;
      font-weight: 600;
    }

    .task-list {
      display: grid;
      gap: 20px;
      list-style: none;
    }

    .task-card {
      background: var(--surface);
      border-radius: 16px;
      padding: 20px;
      position: relative;
      transition: all 0.3s ease;
      border: 1px solid var(--border);
      overflow: hidden;
    }

    .task-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: linear-gradient(90deg, var(--primary), #60a5fa);
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .task-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    }

    .task-card:hover::before {
      opacity: 1;
    }

    .task-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
    }

    .task-title {
      font-size: 1.2em;
      font-weight: 600;
      color: var(--text);
    }

    .task-status {
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 0.85em;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 6px;
    }

    .status-completed {
      background: rgba(16, 185, 129, 0.2);
      color: var(--success);
    }

    .status-pending {
      background: rgba(59, 130, 246, 0.2);
      color: var(--primary);
    }

    .task-actions {
      display: flex;
      gap: 12px;
      margin-top: 15px;
    }

    .task-btn {
      padding: 8px 16px;
      border-radius: 8px;
      text-decoration: none;
      font-size: 0.9em;
      font-weight: 500;
      transition: all 0.3s ease;
      display: inline-flex;
      align-items: center;
      gap: 6px;
    }

    .btn-complete {
      background: var(--success);
      color: white;
    }

    .btn-complete:hover {
      background: #059669;
    }

    .btn-edit {
      background: var(--primary);
      color: white;
    }

    .btn-edit:hover {
      background: var(--primary-dark);
    }

    .btn-delete {
      background: #ef4444;
      color: white;
    }

    .btn-delete:hover {
      background: #dc2626;
    }

    @media (max-width: 640px) {
      .container {
        padding: 10px;
      }

      .task-actions {
        flex-direction: column;
      }

      .task-btn {
        width: 100%;
        justify-content: center;
      }

      h1 {
        font-size: 2em;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>Task Manager</h1>
      <a href="/tasks/create" class="create-task-btn">
        <i class="fas fa-plus-circle"></i>
        Create a new Task
      </a>
    </div>

    <h2 class="section-title">All Tasks</h2>
    <ul class="task-list">
      <% tasks.forEach(task => { %>
        <li class="task-card">
          <div class="task-header">
            <strong class="task-title"><%= task.title %></strong>
            <span class="task-status <%= task.completed ? 'status-completed' : 'status-pending' %>">
              <i class="fas <%= task.completed ? 'fa-check-circle' : 'fa-clock' %>"></i>
              <%= task.completed ? 'Completed' : 'In Progress' %>
            </span>
          </div>
          
          <div class="task-actions">
            <% if (!task.completed) { %>
              <a href="/tasks/<%= task.id %>/complete" class="task-btn btn-complete">
                <i class="fas fa-check"></i>
                Mark Complete
              </a>
            <% } %>
            <a href="/tasks/edit/<%= task.id %>" class="task-btn btn-edit">
              <i class="fas fa-edit"></i>
              Edit
            </a>
            <a href="/tasks/delete/<%= task.id %>" class="task-btn btn-delete">
              <i class="fas fa-trash"></i>
              Delete
            </a>
          </div>
        </li>
      <% }); %>
    </ul>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Add confirmation for delete action
      const deleteButtons = document.querySelectorAll('.btn-delete');
      deleteButtons.forEach(button => {
        button.addEventListener('click', function(e) {
          if (!confirm('Are you sure you want to delete this task?')) {
            e.preventDefault();
          }
        });
      });
    });
  </script>
</body>
</html>